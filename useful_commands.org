#+title: Useful Commands
#+author: midnight1938

* Download parts of a video with yt-dlp
- ~bv**ba~ means best video best audio
- hh:mm:ss
** Audio
#+begin_src bash
yt-dlp -f 'ba' -x --postprocessor-args "-ss 00:00:00 -to 00:00:00" "https://youtu.be"
#+end_src
Add ~--audio-format mp3/wav~ for audio version
** Video Type
#+begin_src bash
yt-dlp -f 'bv' --download-sections "*0:00:18-0:00:00" --force-keyframes-at-cuts "https://youtu.be"
#+end_src

* View network devices
#+begin_src bash
cd /etc/NetworkManager/system-connections/
#+end_src1

* A desktop file
They are in either of the two:
#+begin_src bash
~/.local/share/applications/
/usr/share/applications/
#+end_src
And uses the following format in the .desktop
#+begin_src conf
[Desktop Entry]
Encoding=UTF-8
Version=1.0
Type=Application
Terminal=false
Exec=/path/to/executable
Name=Name of Application
Icon=/path/to/icon
#+end_src
* Find files with the text
#+begin_src bash
find /path/to/search -type f -exec grep -l "your-search-string" {} \;
#+end_src

* Move and stuff files that are of the form one place to another
#+begin_src bash
FN1 =  Current Name
FN2 = New Name
while read FN1; do read FN2; mv $FN1 $FN2; done < Text.list
#+end_src

* Add new ssh
#+begin_src bash
ssh-keygen -t ed25519 -C "name@domain.com"
ssh-add ~/.ssh/id_ed25519
#+end_src

* Wifi Passwors and such
#+begin_src bash
cd /etc/NetworkManager/system-connections
#+end_src
* To find words in a file
Do the following:
#+begin_src bash
grep -rnw '/path/to/somewhere/' -e 'pattern'
#+end_src
- ~-r~ or ~-R~ is recursive.
- ~-n~ is line number.
- ~-w~ stands for match the whole word.
- ~-l~ (lower-case L) can be added to just give the file name of matching files.
- ~-e~ is the pattern used during the search

** Along with these, ~--exclude~, ~--include~, ~--exclude-dir~ flags could be used for efficient searching:

- This will only search through those files which have .c or .h extensions:
  #+begin_src bash
  grep --include=\*.{c,h} -rnw '/path/to/somewhere/' -e "pattern"
  #+end_src
- This will exclude searching all the files ending with .o extension:
  #+begin_src bash
  grep --exclude=\*.o -rnw '/path/to/somewhere/' -e "pattern"
  #+end_src

- For directories it's possible to exclude one or more directories using the --exclude-dir parameter.
  For example, this will exclude the dirs dir1/, dir2/ and all of them matching *.dst/
  #+begin_src bash
  grep --exclude-dir={dir1,dir2,*.dst} -rnw '/path/to/search/' -e "pattern"
  #+end_src
* Fix a read-only volume/drive error
It happens because, either you failed mount it in a place that your system does by default, or a place you can edit (consult nautilus file manager for ideal mount point)
+ Remount the system to its proper place if you havent. In fedora it is ~/run/media/<userName>/<volName>~
+ Running the ntfs fixer solves the problem for most file systems using ntfs,
  Check the /Device/ and /Type/ using ~sudo fdisk -l~. If its not ntfs, idc I do.

1. Unmount the system. For me its ~/dev/sda1~
   #+begin_src bash
sudo umount /dev/sda1
   #+end_src
2. Run ntfsfix to fix all issues, and reboot to be extra sure.
#+begin_src bash
sudo ntfsfix /dev/sdxY # x being 'a' for most ppl and Y depends on your volume/disk
reboot
#+end_src
3. Allow the system to mount according to your setting, or mount manually.

#  LocalWords:  ntfsfix
* Plot System Bootup Blame
#+begin_src bash
systemd-analyze plot > system-blame-graph.svg
#+end_src
* FFMPEG
** FFMPEG mp4 to gif
#+begin_src bash
ffmpeg -ss 30 -t 3 -i input.mp4 \
    -vf "fps=10,scale=320:-1:flags=lanczos,split[s0][s1];[s0]palettegen[p];[s1][p]paletteuse" \
    -loop 0 output.gif
#+end_src
** Cut a video
#+begin_src bash
ffmpeg -i input.mp4 -ss 00:05:10 -to 00:15:30 -c:v copy -c:a copy output2.mp4
#+end_src
** Changing mp4 to webm
#+begin_src bash
ffmpeg  -i file.mp4  -b:v 0  -crf 30  -pass 1  -an -f webm -y /dev/null && \
ffmpeg  -i file.mp4  -b:v 0  -crf 30  -pass 2  output.webm
#+end_src

