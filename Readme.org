#+title: Documentation of things learnt

* Table of Contents :toc:
- [[#languages][Languages]]
  - [[#flutter][Flutter]]
  - [[#container-images][Container images]]
  - [[#getting-a-web-server-running][Getting a web server running]]
  - [[#good-packages-for-flutter][Good packages for flutter]]
  - [[#interesting-flutter-sources][Interesting Flutter sources]]
  - [[#other-sources][Other sources]]
- [[#kubernetes][Kubernetes]]
  - [[#podman][Podman]]
- [[#softwares][Softwares]]
  - [[#emacs-and-org-mode][Emacs and org mode]]
  - [[#hibernation-setup][Hibernation Setup]]
- [[#rescuing-systems][Rescuing systems]]
  - [[#opensuse][Opensuse]]

* Languages
** Flutter
** Container images
A good container image seems to be the ~instrumentisto/flutter~ image available from distributors like quary and docker hub
** Getting a web server running
You can simply run the given code to run a web server model that you can access from your host computer via ~localhost:3000~. With the ~--release~ tag being optional.
#+begin_src bash
flutter run --release -d web-server --web-hostname=0.0.0.0 --web-port=3000
#+end_src
** Good [[https:pub.dev/][packages]] for flutter
- [[https:medium.flutterdevs.com/exploring-csv-in-flutter-fafc57b02eb1][Working with CSV]]
- [[https:pub.dev/packages/printing][Print to pdf]]
- [[https:pub.dev/packages/sqflite][SQLite]]
- [[https:pub.dev/packages/sqflite_common_ffi][SQLite3 based ffi implementation]]
** Interesting Flutter sources
- [[https:flutter.dev/events/puzzle-hack][Puzzle Hack]]
- [[youtube:PaPUkxYHDUw][Clocks with flutter]]
*** Android Sources
**** Android Design Toolkit
- [[https:flutter.github.io/samples/web/material_3_demo/#/][Material 3 showcase]]

*** Windows
**** Windows Design Toolkit
- [[https:learn.microsoft.com/en-us/windows/apps/design/basics/][Design Basics]]
- [[https:learn.microsoft.com/en-us/windows/apps/design/downloads/][Windows apps toolkits and samples]]
- [[youtube:bee2AHQpGK4][Windows style titlebar]]

*** Linux Sources
**** Packaging Apps
- [[github:Merrit/flutter_flatpak_example][Flatpak packaging]]
** Other sources
- A [[https:copr.fedorainfracloud.org/coprs/carzacc/flutter/][copr repo]] for setting flutter up in fedora
  Which installs the SDK in the ~~/flutter~ folder

* Kubernetes
** Podman
*** Getting setup in Fedora
**** Installing GUIs
***** Install the Podman desktop
Run the command:
#+begin_src bash
flatpak install io.podman_desktop.PodmanDesktop
#+end_src
***** Podman TUI
#+begin_src bash
sudo dnf install podman-tui
#+end_src
***** Installing Pods
Run the command:
#+begin_src bash
flatpak install flathub com.github.marhkb.Pods
#+end_src
**** Probably still want some docker?
Set it up according to docker
**** Documentation and sites
- [[https:fedoramagazine.org/docker-and-fedora-37-migrating-to-podman/][Fedora Magazine Article about migration to podman]]
- [[https:podman.io][Podman Website]]
  - [[https:podman.io/getting-started/][Getting Started]]
- [[https:podman-desktop.io][Podman Desktop tool]]
  - [[https:podman-desktop.io/docs/intro][Documentation]]
  - [[https:podman-desktop.io/docs/getting-started/getting-started][Getting started]]
- [[https:blog.while-true-do.io/tag/podman][while-true-do blog]]
*** Working with VSCode
**** Setup for remote
Setup the containers working by setting these in the VSCode settings:
#+begin_src json
"docker.dockerPath": "/usr/bin/podman",
"docker.environment": {
    "DOCKER_HOST": "unix:///run/user/1000/podman/podman.sock"
},
"dev.containers.dockerComposePath": "podman-compose",
"dev.containers.dockerPath": "podman"
#+end_src
Do check for the /1000/ by running ~id~ in the command line.

**** Troubleshooting
Thanks to [[https:opensource.com/article/21/7/vs-code-remote-containers-podman][Opensource.com]]
You can simply setup the podman container by adding these to the ~devcontainer.json~
#+begin_src json
  "runArgs": ["--userns=keep-id"],
  "containerEnv": {
    "HOME": "/home/midnight"
  },
  "remoteUser": "midnight",
  "containerUser": "midnight",
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,Z",
  "workspaceFolder": "/workspace"
#+end_src
Do try [[https:blog.lifeishao.com/2021/12/30/replacing-docker-with-podman-for-your-vscode-devcontainers/][lifeishao]]

* Softwares
** Emacs and org mode
*** Web Sources
+ [[https:orgmode.org/worg/org-contrib/babel/languages/ob-doc-C.html][Working with programming languages]]
*** Tricks and Sips
+ To change the numbering beside headings, use
  ~#+options: num:nil~ the nil can be 1,2,3,4 for the depth the numbering reaches
+ Use the command ~#+org_attr~ to edit image captions, widths.
  + ~#+attr_html:~ is an alternative for html exports
+ The ~:toc:~ tag can create a table of contents automatically. Just needs to be at the top.
+ Use the ~#+startup: show2levels~ to collapse the headers by default, goes from all to 1
+ The ~org-superstar-mode~ controls the beautification of the orgmode heading bullets
** Hibernation Setup
*** OpenSuse
- [[https:suse.com/support/kb/doc/?id=000020287][According to Suse]]
#+begin_src bash
echo 'add_dracutmodules+=" resume "' > /etc/dracut.conf.d/resume.conf
chmod a-x /usr/lib/systemd/systemd-hibernate-resume
dracut -f
grub2-mkconfig -o /boot/grub2/grub.cfg
reboot
#+end_src
- In case of slow shutdowns and reboots
#+begin_src bash
  sudo gedit /etc/systemd/system.conf
  #Edit DefaultTimeoutStopSec
  systemctl daemon-reload
#+end_src
- Redditor Advises
#+begin_src bash
  sudo systemctl enable nvidia-suspend nvidia-hibernate nvidia-resume
#+end_src
* Rescuing systems
** Opensuse
*** GRUB Error
1. Boot into rescue system using the usb iso
2. Check where the system is located using fdisk -l
   - ~mount /dev/sda3 /mnt~
3. Mount all parts of the drive using mount
   - ~mount -t proc none /mnt/proc~
   - ~mount --rbind /dev /mnt/dev~
   - ~mount --rbind /sys /mnt/sys~
4. Change to the new env with ~chroot /mnt~ then mount the remaining with ~mount -a~
5. Run ~dracut -f~ to remake initram
6. Regenerate and reinstall grub
   - ~grub2-install /dev/sda~
   - ~grub2-mkconfig -o /boot/grub2/grub.cfg~
Then according to [[https:old.reddit.com/r/openSUSE/comments/qwczfw/tumbleweed_guide_repairing_the_uefi_bootloader/][reddit]]:
1. Boot into any linux sysem from pd
2. Confirm which partition the install is on, here its sda2 so =2=
3. To restore the UEFI boot entry, run the following command.
   Adapted for your own drive (=-d= parameter) and partition (=-p= parameter):
   #+begin_src bash
     sudo efibootmgr -c -w -L "opensuse-secure" -d /dev/sda -p 2 -l "/EFI/OPENSUSE/SHIM.EFI"
#+end_src

